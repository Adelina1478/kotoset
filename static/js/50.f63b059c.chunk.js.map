{"version":3,"file":"static/js/50.f63b059c.chunk.js","mappings":"mLAEO,MAAMA,EAAkBC,EAAAA,KAAaC,MAAM,CAC9CC,MAAOF,EAAAA,KACFG,SAAS,qBACdC,SAAUJ,EAAAA,KACLG,SAAS,qBACTE,IAAI,GAAI,+CACRC,IAAI,EAAG,sCAGHC,EAAoBC,IAC7B,MAAMC,EAAS,CAAC,EAchB,OAbKD,EAAON,MAGP,2CAA2CQ,KAAKF,EAAON,SAExDO,EAAOP,MAAQ,yBAJfO,EAAOP,MAAQ,oBAMdM,EAAOJ,UAEDI,EAAOJ,SAASO,OAAS,GAAKH,EAAOJ,SAASO,OAAS,MAC9DF,EAAOL,SAAW,gDAFlBK,EAAOL,SAAW,oBAKfK,CAAM,E,aCnBjB,MA4CA,GAAeG,EAAAA,EAAAA,KAJQC,IAAK,CACxBC,OAAOD,EAAME,KAAKD,UAGkB,CAACE,MAAK,MAA9C,EA5CeC,GACPA,EAAMH,QAAeI,EAAAA,EAAAA,KAACC,EAAAA,GAAQ,CAACC,GAAG,cAEtCC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIJ,EAAAA,EAAAA,KAAA,MAAAI,SAAI,WACJJ,EAAAA,EAAAA,KAACK,EAAAA,GAAM,CACHC,cAAe,CAACtB,MAAO,GAAIE,SAAU,GAAIqB,YAAY,GACrDC,SAAUnB,EACVoB,iBAAkB5B,EAElB6B,SAAWpB,IACPS,EAAMD,MAAMR,EAAON,MAAOM,EAAOJ,SAASI,EAAOiB,WAAW,EAC9DH,SAEDA,KAEGD,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAAAP,SAAA,EACDJ,EAAAA,EAAAA,KAAA,OAAAI,UACIJ,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,KAAM,QAASC,KAAM,QAASC,YAAa,cAEtDf,EAAAA,EAAAA,KAACgB,EAAAA,GAAY,CAACF,KAAK,QAAQG,UAAU,MAAMC,MAAO,CAAEC,MAAO,UAC3DnB,EAAAA,EAAAA,KAAA,OAAAI,UACIJ,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,KAAM,WAAYC,KAAM,WAAYC,YAAa,gBAE5Df,EAAAA,EAAAA,KAACgB,EAAAA,GAAY,CAACF,KAAK,WAAWG,UAAU,MAAMC,MAAO,CAAEC,MAAO,UAE9DhB,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIJ,EAAAA,EAAAA,KAACY,EAAAA,GAAK,CAACC,KAAM,WAAYC,KAAM,gBAC/Bd,EAAAA,EAAAA,KAAA,SAAOoB,QAAS,aAAahB,SAAC,sBAGlCJ,EAAAA,EAAAA,KAAA,UAAQa,KAAM,SAAST,SAAC,oB","sources":["utils/validators/validators.js","components/login/login.jsx"],"sourcesContent":["import * as Yup from \"yup\";\n\nexport const loginFormSchema = Yup.object().shape({\n    email: Yup.string()\n        .required(\"Field is required\"),\n    password: Yup.string()\n        .required(\"Field is required\")\n        .max(20, \"Nice try, nobody has a first name that long\")\n        .min(2, \"Must be longer than 2 characters\")\n});\n\nexport const validateLoginForm = values => {\n    const errors = {};\n    if (!values.email) {\n        errors.email = 'Field is required';\n    } else if (\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n    ) {\n        errors.email = 'Invalid email address';\n    }\n    if (!values.password) {\n        errors.password = 'Field is required';\n    } else if (values.password.length < 2 || values.password.length > 20) {\n        errors.password = 'Password must be between 2 and 20 characters';\n    }\n\n    return errors;\n};\n\n\n\n\n","import { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\nimport { login } from \"../../Redux/authReduser\";\nimport { loginFormSchema, validateLoginForm } from \"../../utils/validators/validators\";\n\nconst Login = (props) => {\n    if (props.isAuth) return <Navigate to='/profile'/>\n    return(\n    <div>\n        <h1>Login</h1>\n        <Formik\n            initialValues={{email: \"\", password: \"\", rememberMe: false}}\n            validate={validateLoginForm}\n            validationSchema={loginFormSchema}\n            \n            onSubmit={(values) => {\n                props.login(values.email, values.password,values.rememberMe)\n            }}\n>\n            {() => (\n                \n                <Form>\n                    <div>\n                        <Field type={'email'} name={'email'} placeholder={'e-mail'}/>\n                    </div>\n                    <ErrorMessage name=\"email\" component=\"div\" style={{ color: 'red' }}/>\n                    <div>\n                        <Field type={'password'} name={'password'} placeholder={'password'} />\n                    </div>\n                    <ErrorMessage name=\"password\" component=\"div\" style={{ color: 'red' }} />\n\n                    <div>\n                        <Field type={'checkbox'} name={'rememberMe'}/>\n                        <label htmlFor={'rememberMe'}> remember me </label>\n                    </div>\n\n                    <button type={'submit'}>Log in</button>\n\n                </Form>\n            )}\n        </Formik>\n    </div>\n    )\n};\n\nconst mapStateToProps=(state)=>({\n    isAuth:state.auth.isAuth\n\n})\nexport default connect(mapStateToProps, {login})(Login);\n\n\n\n"],"names":["loginFormSchema","Yup","shape","email","required","password","max","min","validateLoginForm","values","errors","test","length","connect","state","isAuth","auth","login","props","_jsx","Navigate","to","_jsxs","children","Formik","initialValues","rememberMe","validate","validationSchema","onSubmit","Form","Field","type","name","placeholder","ErrorMessage","component","style","color","htmlFor"],"sourceRoot":""}