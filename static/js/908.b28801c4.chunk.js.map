{"version":3,"file":"static/js/908.b28801c4.chunk.js","mappings":"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","sources":["HOC/AuthRedirect.js","webpack://react-1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHoC.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","webpack://react-1/./src/components/Profile/myposts/MyPosts.module.css?27f2","webpack://react-1/./src/components/Profile/myposts/post/Post.module.css?2784","components/Profile/myposts/post/Post.jsx","components/Profile/myposts/MyPosts.jsx","components/Profile/myposts/MyPostContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Navigate } from \"react-router-dom\";\n\nlet mapStateToPropsForRedirect = (state)=> ({\n    isAuth: state.auth.isAuth\n})\n\nexport const withAuthRedirect=(Component)=>{\n    class RedirectComponent extends React.Component{\n        render(){\n            if (!this.props.isAuth) return <Navigate to ={\"/login\"}/>\n            return <Component {...this.props}/>\n        }\n    }\n\n\n    \n    let ConnectedAuthRedirectComponent=connect(mapStateToPropsForRedirect)(RedirectComponent);\n    \n    return ConnectedAuthRedirectComponent;\n}","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"ProfileInfo_description__3wtAW\",\"img\":\"ProfileInfo_img__DiUD6\",\"mainphoto\":\"ProfileInfo_mainphoto__HyBIw\"};","import React, { useEffect, useState } from 'react';\n\n\nconst ProfileStatusWithHoks = (props)=>{\n    let [editMode,setEditMode]= useState(false);\n    let [status,setStatus]= useState(props.status);\n\n    useEffect(()=>{//хук нельзя писать в условиях  в циклах тое нельзя читать документацию!!\n        setStatus(props.status);}, [props.status]);\n\n    const activateEditMode=()=>{\n        setEditMode(true);\n    }\n    const deactivateEditMode=()=>{\n        setEditMode(false)\n        props.updatestatus(status);\n    }\n\n    const onStatusChange=(e)=>{\n        setStatus(e.currentTarget.value);\n    }\n        return (\n            <div>\n                {!editMode &&\n                    <div>\n                        <span onDoubleClick={activateEditMode}>{props.status || \"--------\"}</span>\n                    </div>\n                }\n                {editMode &&\n                    <div>\n                        <input onChange={onStatusChange} autoFocus={true} onBlur= {deactivateEditMode}value={status}/>\n                    </div>\n                }\n            </div>\n\n\n            )\n    }\n\n\nexport default ProfileStatusWithHoks;","import React from 'react';\nimport userimg from \"../../../assets/images/ava.jpg\";\nimport Preloader from '../../common/preloader/preloader';\nimport s from './ProfileInfo.module.css';\nimport ProfileStatusWithHoks from './ProfileStatusWithHoC';\n\nconst ProfileInfo = (props) => {\n    if (!props.profile){\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div className={s.img}>\n                <img src='https://img.freepik.com/premium-photo/blue-pattern-panorama-banner-background_7954-22619.jpg'/>\n            </div>\n            <div className= {s.description}>\n                <img src={props.profile.photos.large || userimg} className={s.mainphoto}/>\n                <div><input type={\"file\"}/></div>\n                \n                <ProfileStatusWithHoks status = {props.status} updatestatus={props.updatestatus}/>\n            </div>\n        </div>\n    )\n}\nexport default ProfileInfo;","// extracted by mini-css-extract-plugin\nexport default {\"postBlocs\":\"MyPosts_postBlocs__5OD-d\",\"posts\":\"MyPosts_posts__TF7nH\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__ITIzK\"};","import React from 'react';\nimport prof from './Post.module.css';\n\nconst Post = (props) =>{\n    return <div className = {prof.item}>\n        <img src = 'https://cs14.pikabu.ru/post_img/big/2023/02/13/8/1676296367166243426.png'/>\n        {props.message}\n                <div>\n                <span>like</span> {props.likeCount}\n                <span>dislike</span>{props.disCount}\n                </div>\n                \n            </div>\n            \n\n\n\n}\nexport default Post;","import { Field, Form, Formik } from 'formik';\nimport React from 'react';\nimport prof from './MyPosts.module.css';\nimport Post from './post/Post';\n\nconst MyPosts =(props)=>{\n    let PostsElement = props.Posts.map(p => <Post message={p.message} likeCount={p.likeCount} disCount={p.disCount} />)\n    let newPostElement = React.createRef();\n\n    /*let onAddPost = () => {\n        props.addPost();\n    }\n    let onPostChange = () => {\n        let text = newPostElement.current.value;\n        props.updateNewPostText(text);\n    }*/\n\n\n    return <div className={prof.postBlocs}>\n        <h3>my posts</h3>\n        <div>\n            <AddNewPostForm addPost={props.addPost}/>\n        </div>\n        <div className={prof.posts}>\n            {PostsElement}\n        </div>\n        \n        </div>\n}\nlet AddNewPostForm = (props) =>{\n    let onAddPost = (values) => {\n        props.addPost(values);\n    }\n    return(\n        <Formik\n            initialValues={{newPostText: \"\"}\n            }\n            onSubmit={(values, {resetForm}) => {\n                onAddPost( values.newPostText );\n                resetForm( {values: ''} );\n                }}>\n            {() => (\n                <Form>\n                    <div>\n                        <Field name={'newPostText'} as={'textarea'}/>\n                    </div>\n                    <div>\n                <button type={'submit'}>AddPost</button>\n            </div>\n                </Form>\n            )}\n        </Formik>\n    )\n}\n\nexport default MyPosts;\n","import { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../Redux/ProfileReducer';\nimport MyPosts from './MyPosts';\n\nconst mapStateToProps =(state)=>{\n    return{\n        Posts : state.profilePage.Posts,\n        newPostText :state.profilePage.newPostText\n    }\n}\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        addPost:(newPostText)=>{\n            dispatch(addPostActionCreator(newPostText));\n        }\n    }\n}\n\n\n\nconst MyPostsContainer= connect( mapStateToProps ,mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport MyPostsContainer from './myposts/MyPostContainer';\n\nconst Profile = (props) => {\n    \n    return <div>\n        <ProfileInfo profile={props.profile} status={props.status} updatestatus={props.updatestatus} />\n        <MyPostsContainer/>\n    </div>\n\n}\nexport default Profile;","/*import axios from 'axios';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { setUserProfile } from '../../Redux/ProfileReducer';\nimport Profile from './Profile';\n\nclass ProfileContainer extends React.Component {\n    \n    componentDidMount() {\n        let userId = useParams();;\n        if (!userId) {\n            userId=2;\n        }\n        axios.get(`https://social-network.samuraijs.com/api/1.0/profile/`+userId).then((response) => {\n            this.props.setUserProfile(response.data);\n        });\n    }\n    render() {\n\n        return (\n            <Profile {...this.props} profile={this.props.profile} />)\n\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile\n});\n\n\nlet WithUrlDataContainerComponent = useParams(ProfileContainer);\nexport default useSelector(mapStateToProps, { setUserProfile })(WithUrlDataContainerComponent);*/\nimport React, { useEffect } from 'react';\nimport { connect } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { compose } from 'redux';\nimport { withAuthRedirect } from '../../HOC/AuthRedirect';\nimport { getstatus, getUserProfile, updatestatus } from '../../Redux/ProfileReducer';\nimport Profile from \"./Profile\";\n\nfunction ProfileContainer(props) {\n    let { userId } = useParams();\n    if (!userId) {\n        userId = 31422;\n    }\n    useEffect(() => {\n        props.getUserProfile(userId);\n        props.getstatus(userId);\n        }, [userId]);\n    \n    \n    return (\n        <div>\n            <Profile profile={props.profile} status={props.status} updatestatus={props.updatestatus} />\n        </div>\n    );\n}\n\nlet mapStateToProps = (state)=> ({\n    profile: state.profilePage.profile,\n    status:state.profilePage.status\n})\n\nexport default  compose(\n    withAuthRedirect,\n    connect (mapStateToProps, {getUserProfile,getstatus,updatestatus}),\n    /*withAuthRedirect*/\n)(ProfileContainer);\n\n"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","React","render","this","props","_jsx","Navigate","to","connect","editMode","setEditMode","useState","status","setStatus","useEffect","_jsxs","children","onDoubleClick","activateEditMode","onChange","e","currentTarget","value","autoFocus","onBlur","deactivateEditMode","updatestatus","profile","className","s","src","photos","large","userimg","type","ProfileStatusWithHoks","Preloader","prof","message","likeCount","disCount","AddNewPostForm","Formik","initialValues","newPostText","onSubmit","values","_ref","resetForm","addPost","onAddPost","Form","Field","name","as","PostsElement","Posts","map","p","Post","profilePage","dispatch","addPostActionCreator","MyPosts","ProfileInfo","MyPostsContainer","compose","getUserProfile","getstatus","userId","useParams","Profile"],"sourceRoot":""}